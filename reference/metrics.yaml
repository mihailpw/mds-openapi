openapi: 3.1.0

x-stoplight:
  id: 7r4jdgpio4wn8

info:
  title: Metrics
  version: "2.0"
  summary: Metrics API endpoints are intended to be implemented by regulatory agencies for requesting historical calculated core metrics and aggregations of MDS data.
  contact:
    url: https://github.com/openmobilityfoundation/mobility-data-specification
    name: Open Mobility Foundation
    email: info@openmobilityfoundation.org
  license:
    name: Creative Commons Attribution 4.0 International Public License
    url: https://github.com/openmobilityfoundation/mobility-data-specification/blob/main/LICENSE
  description: |-
    The Metrics API endpoints are intended to be implemented by regulatory agencies, their third party appointed
    representatives, or city designated partners for requesting historical calculated core metrics and aggregations of MDS data.

    The Metrics API allows viewing of aggregate report data derived from some MDS endpoints that may be used for use cases like
    compliance, program effectiveness, and alignment on counts. The metrics methodology definitions may be used by providers
    and third parties in their own calculations.

components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      description: |-
        MDS Metrics endpoint producers SHALL provide authorization for API endpoints via a bearer token based auth system.

        When making requests, the endpoints expect one of two scopes `metrics:read` or `metrics:read:provider` to be present as
        part of the scope claims in a JSON Web Token (JWT).

        Further scopes and requirements may be added at the discretion of the agency, depending on their particular access control needs.
  schemas:
    measures:
      type: array
      minItems: 1
      uniqueItems: true
      items:
        type: string
        examples:
          - vehicles.[status].avg
          - vehicles.[status].min
          - vehicles.[status].max
          - vehicles.[status].duration.sum
          - events.[event_type].count
          - trips.[start_loc/end_loc].count
          - trips.[start_loc/end_loc].duration.avg
          - trips.[start_loc/end_loc].duration.med
          - trips.[start_loc/end_loc].duration.std
          - trips.[start_loc/end_loc].duration.sum
          - trips.[start_loc/end_loc].distance.avg
          - trips.[start_loc/end_loc].distance.med
          - trips.[start_loc/end_loc].distance.std
          - trips.[start_loc/end_loc].distance.sum
    dimensions:
      type: array
      description: List of dimension names.
      minItems: 1
      uniqueItems: true
      items:
        type: string
        examples:
          - provider_id
          - geography_id
          - vehicle_type
    query:
      required:
        - measures
        - interval
        - start_date
      properties:
        measures:
          $ref: "#/components/schemas/measures"
          description: List of measures to return.
        interval:
          $ref: ../models/data-types/iso-duration.yaml
          description: ISO 8601 duration for metrics intervals.
        start_date:
          oneOf:
            - $ref: ../models/data-types/iso-dayhourminute.yaml
            - $ref: ../models/data-types/timestamp.yaml
          description: ISO 8601 formatted start date or numeric timestamp to fetch metrics.
        end_date:
          oneOf:
            - $ref: ../models/data-types/iso-dayhourminute.yaml
            - $ref: ../models/data-types/timestamp.yaml
          description: ISO 8601 formatted end date or numeric timestamp to fetch metrics.
        timezone:
          $ref: ../models/data-types/timezone.yaml
        dimensions:
          $ref: "#/components/schemas/dimensions"
        filters:
          type: array
          description: List of dimension names.
          uniqueItems: true
          items:
            type: object
            properties:
              name:
                type: string
                description: Name of filter.
              values:
                type: array
                description: List of values to filter for.
                minItems: 1
                uniqueItems: true
                items:
                  type: object
            examples:
              - name: geography_type
                values:
                  - census_block
    column:
      required:
        - name
        - column_type
        - data_type
      properties:
        name:
          type: string
          description: Name of metric or dimension column.
        column_type:
          type: string
          description: Type of column.
          enum:
            - metric
            - dimension
        data_type:
          type: string
          description: Data type of column.
          enum:
            - datetime
            - string
            - integer
            - float
    row:
      type: array
      minItems: 1
      items:
        type:
          - string
          - number

paths:
  /metrics:
    get:
      operationId: get-metrics
      description: Get a discovery response describing the supported metrics, times, intervals, dimensions and filters.
      summary: /metrics
      responses:
        "200":
          description: Metrics discovered.
          content:
            application/json:
              schema:
                required:
                  - metrics
                  - max_intervals
                  - dimensions
                  - filters
                properties:
                  metrics:
                    type: array
                    minItems: 1
                    items:
                      required:
                        - measures
                        - since
                        - intervals
                      properties:
                        measures:
                          $ref: "#/components/schemas/measures"
                          description: List of measure names.
                        since:
                          oneOf:
                            - $ref: ../models/data-types/iso-dayhourminute.yaml
                            - $ref: ../models/data-types/timestamp.yaml
                          description: Earliest supported start date for fetching metrics. Minute (`mm`) must be divisible by minimum `interval`.
                        intervals:
                          type: array
                          minItems: 1
                          uniqueItems: true
                          items:
                            $ref: ../models/data-types/iso-duration.yaml
                  max_intervals:
                    $ref: ../models/data-types/integer-positive.yaml
                    description: Maximum number intervals that can be returned.
                  dimensions:
                    $ref: "#/components/schemas/dimensions"
                    description: List of supported dimensions.
                  filters:
                    type: array
                    minItems: 1
                    uniqueItems: true
                    items:
                      type: string
                      examples:
                        - provider_id
                        - geography_id
                        - geography_type
                        - vehicle_type
        "404":
          description: Metrics not discovered.
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: ../models/response/error.yaml
    post:
      operationId: post-metrics
      description: Query metrics.
      summary: /metrics
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/query"
      responses:
        "200":
          description: Metrics found.
          content:
            application/json:
              schema:
                required:
                  - id
                  - query
                  - columns
                  - rows
                properties:
                  id:
                    $ref: "../models/data-types/uuid.yaml"
                    description: Unique id for query
                  query:
                    allOf:
                      - $ref: "#/components/schemas/query"
                      - required:
                          - k_value
                        properties:
                          k_value:
                            type: integer
                            description: The k-anonymity value used in any data redaction.
                            examples:
                              - 10
                  columns:
                    type: array
                    minItems: 1
                    items:
                      $ref: "#/components/schemas/column"
                  rows:
                    type: array
                    minItems: 1
                    items:
                      $ref: "#/components/schemas/row"
        "400":
          description: Bad request.
        "404":
          description: Metrics not found.
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: ../models/response/error.yaml
